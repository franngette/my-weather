import { render, screen } from '@testing-library/react';
import Widget from './Widget'

const weatherTest = { "consolidated_weather": [{ "id": 5092692024360960, "weather_state_name": "Light Cloud", "weather_state_abbr": "lc", "wind_direction_compass": "ESE", "created": "2021-04-19T00:31:02.510261Z", "applicable_date": "2021-04-19", "min_temp": 4.125, "max_temp": 17.134999999999998, "the_temp": 14.254999999999999, "wind_speed": 3.1354225778811737, "wind_direction": 115.6945645894159, "air_pressure": 1023.5, "humidity": 43, "visibility": 10.24796438797423, "predictability": 70 }, { "id": 6274031536832512, "weather_state_name": "Showers", "weather_state_abbr": "s", "wind_direction_compass": "ENE", "created": "2021-04-19T00:31:02.472180Z", "applicable_date": "2021-04-20", "min_temp": 6.470000000000001, "max_temp": 17.355, "the_temp": 16.04, "wind_speed": 2.3581259026193697, "wind_direction": 67.73480483655149, "air_pressure": 1020.5, "humidity": 50, "visibility": 11.0846406983218, "predictability": 73 }, { "id": 6248283409219584, "weather_state_name": "Showers", "weather_state_abbr": "s", "wind_direction_compass": "NE", "created": "2021-04-19T00:31:02.512872Z", "applicable_date": "2021-04-21", "min_temp": 6.715, "max_temp": 12.965, "the_temp": 14.24, "wind_speed": 4.841272805792836, "wind_direction": 53.90233957506096, "air_pressure": 1020.5, "humidity": 57, "visibility": 12.183846337389644, "predictability": 73 }, { "id": 6599325346955264, "weather_state_name": "Light Cloud", "weather_state_abbr": "lc", "wind_direction_compass": "ENE", "created": "2021-04-19T00:31:02.593919Z", "applicable_date": "2021-04-22", "min_temp": 3.6799999999999997, "max_temp": 14.365000000000002, "the_temp": 12.555, "wind_speed": 7.019863107980062, "wind_direction": 62.86922047437445, "air_pressure": 1023.0, "humidity": 51, "visibility": 11.2477506362841, "predictability": 70 }, { "id": 5929909059846144, "weather_state_name": "Light Cloud", "weather_state_abbr": "lc", "wind_direction_compass": "ENE", "created": "2021-04-19T00:31:02.367346Z", "applicable_date": "2021-04-23", "min_temp": 3.8449999999999998, "max_temp": 14.89, "the_temp": 13.675, "wind_speed": 7.250089482040882, "wind_direction": 58.437935866993385, "air_pressure": 1024.5, "humidity": 47, "visibility": 15.023202000318141, "predictability": 70 }, { "id": 6218591931203584, "weather_state_name": "Heavy Cloud", "weather_state_abbr": "hc", "wind_direction_compass": "NE", "created": "2021-04-19T00:31:04.792992Z", "applicable_date": "2021-04-24", "min_temp": 5.82, "max_temp": 12.815000000000001, "the_temp": 12.14, "wind_speed": 7.020821403006442, "wind_direction": 49.0, "air_pressure": 1021.0, "humidity": 47, "visibility": 9.999726596675416, "predictability": 71 }], "time": "2021-04-19T04:13:47.498614+01:00", "sun_rise": "2021-04-19T05:56:04.170808+01:00", "sun_set": "2021-04-19T20:04:13.030997+01:00", "timezone_name": "LMT", "parent": { "title": "England", "location_type": "Region / State / Province", "woeid": 24554868, "latt_long": "52.883560,-1.974060" }, "sources": [{ "title": "BBC", "slug": "bbc", "url": "http://www.bbc.co.uk/weather/", "crawl_rate": 360 }, { "title": "Forecast.io", "slug": "forecast-io", "url": "http://forecast.io/", "crawl_rate": 480 }, { "title": "HAMweather", "slug": "hamweather", "url": "http://www.hamweather.com/", "crawl_rate": 360 }, { "title": "Met Office", "slug": "met-office", "url": "http://www.metoffice.gov.uk/", "crawl_rate": 180 }, { "title": "OpenWeatherMap", "slug": "openweathermap", "url": "http://openweathermap.org/", "crawl_rate": 360 }, { "title": "Weather Underground", "slug": "wunderground", "url": "https://www.wunderground.com/?apiref=fc30dc3cd224e19b", "crawl_rate": 720 }, { "title": "World Weather Online", "slug": "world-weather-online", "url": "http://www.worldweatheronline.com/", "crawl_rate": 360 }], "title": "London", "location_type": "City", "woeid": 44418, "latt_long": "51.506321,-0.12714", "timezone": "Europe/London" }

test('Render Widget', () => {
    render(<Widget weather={weatherTest} day={0} />)
    expect(screen.getByText('Light Cloud')).toBeInTheDocument()
})

test('Widget data change on day prop', () => {
    render(<Widget weather={weatherTest} day={1} />)
    expect(screen.queryByText('Light Cloud')).toBeNull()

})